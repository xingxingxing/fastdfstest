package cn.wellcom.fastdfs;

import java.io.IOException;
import java.util.concurrent.Executor;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import org.csource.common.MyException;

import sun.misc.BASE64Decoder;

public class App {
	
	public static void main(String[] args) {
		String confPath = "fdfs_client.conf";
		FastClientPoolConfig config = new FastClientPoolConfig();
		FastClientFactory factory;
		try {
			factory = new FastClientFactory(confPath);
			FastClientPool pool = new FastClientPool(factory,config);
			String base64 = "";
			ExecutorService service = Executors.newFixedThreadPool(10);
			for (int i = 0; i < 500; i++) {
				service.submit(()->{
					FastClient client = null;
					try {
						client =  pool.borrowObject();
						uploadBaseFile(base64, "jpg", client);
						} catch (Exception e) {
							e.printStackTrace();
						}finally{
							if(client!=null){
								pool.returnObject(client);
							}
						}
				});
			}
		} catch (IOException | MyException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.err.print("异常退出"+e.getMessage());
			System.exit(0);
		}
		
	}
	
	
    /**
     * base64图片生成一个文件上传
     * @param content base64图片
     * @param fileExtension
     * @return
     * @throws IOException 
     * @throws MyException 
     */
    public static String uploadBaseFile(String base64, String fileExtension,FastClient client) throws IOException, MyException {
		BASE64Decoder decoder = new BASE64Decoder();  
        byte[] buff = decoder.decodeBuffer(base64); 
//        ByteArrayInputStream stream = new ByteArrayInputStream(buff);
        String storePath = client.upload_file1(buff, fileExtension,null);
        System.out.println(storePath);
        return storePath;
    }

}
